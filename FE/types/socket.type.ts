import { Socket } from "socket.io-client";

export type RequestMethod =
  | "getRouterRtpCapabilities"
  | "join"
  | "askToJoin"
  | "createWebRtcTransport"
  | "connectWebRtcTransport"
  | "restartIce"
  | "produce"
  | "closeProducer"
  | "pauseProducer"
  | "resumeProducer"
  | "pauseConsumer"
  | "resumeConsumer"
  | "chatMessage"
  | "raiseHand"
  | "getMyRoomInfo"
  | "promoteAllPeers"
  | "lowerHand"
  | "askNewQuestion"
  | "upvoteQuestion"
  | "getQuestions"
  | "newPoll"
  | "votePoll"
  | "getPolls"
  | "getPoll"
  | "host:denyPeer"
  | "host:denyAllPeers"
  | "host:acceptPeer"
  | "host:acceptAllPeers"
  | "host:closePoll"
  | "host:openPoll"
  | "host:deletePoll"
  | "host:deleteQuestion"
  | "host:replyQuestion"
  | "host:mute"
  | "host:stopVideo"
  | "host:stopScreenSharing"
  | "host:lowerHand"
  | "host:kick"
  | "host:turnOnScreenSharing"
  | "host:turnOffScreenSharing"
  | "host:turnOnChat"
  | "host:turnOffChat"
  | "host:turnOnMicrophone"
  | "host:turnOffMicrophone"
  | "host:turnOnVideo"
  | "host:turnOffVideo"
  | "host:turnOnQuestion"
  | "host:turnOffQuestion"
  | "host:turnOnRaiseHand"
  | "host:turnOffRaiseHand"
  | "host:turnOnPrivate"
  | "host:turnOffPrivate"
  | "host:closeRoom"
  | "host:sendPrivateMessage";

export type NotificationMethod =
  | "askToJoinPeerLeave"
  | "newPeer"
  | "askToJoin"
  | "requestAccepted"
  | "askToJoinPeerAllLeave"
  | "requestDenied"
  | "chatMessage"
  | "raisedHand"
  | "lowerHand"
  | "newQuestion"
  | "upvoteQuestion"
  | "deleteQuestion"
  | "replyQuestion"
  | "newPoll"
  | "votePoll"
  | "pollClosed"
  | "pollOpened"
  | "deletePoll"
  | "host:mute"
  | "host:stopVideo"
  | "host:stopScreenSharing"
  | "host:lowerHand"
  | "host:kick"
  | "host:turnOnScreenSharing"
  | "host:turnOffScreenSharing"
  | "host:turnOnChat"
  | "host:turnOffChat"
  | "host:turnOnMicrophone"
  | "host:turnOffMicrophone"
  | "host:turnOnVideo"
  | "host:turnOffVideo"
  | "host:turnOnQuestion"
  | "host:turnOffQuestion"
  | "host:turnOnRaiseHand"
  | "host:turnOffRaiseHand"
  | "host:turnOnPrivate"
  | "host:turnOffPrivate"
  | "host:updateRoomName"
  | "host:sendPrivateMessage"
  | "peerLeave"
  | "roomClosed"
  | "activeSpeaker"
  | "consumerClosed"
  | "consumerPaused"
  | "consumerResumed";

export type ServerRequestMethod = "newConsumer" | "requestAccepted";

export interface RoomSocket extends Socket {
  request: (type: RequestMethod, data?: any) => Promise<any>;
}
